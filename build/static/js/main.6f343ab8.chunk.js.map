{"version":3,"sources":["assets/spoon.svg","assets/fork.svg","Map/MarkerList.js","Map/MapMarkerCluster.js","Map/MyMap.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PopupMarker","content","react_default","a","createElement","Marker","position","coords","Popup","applicant","location","starttime","endtime","optionaltext","MarkerList","_ref","items","markers","map","_ref2","index","props","Object","esm_extends","MarkerList_PopupMarker","assign","key","react","require","MarkerClusterGroup","el","L","markerClusterGroup","this","contextValue","objectSpread","leaflet","layerContainer","MapLayer","withLeaflet","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MyMap","state","lat","lng","data","southWest","latLng","northEast","bounds","latLngBounds","Map","center","ref","maxBounds","maxZoom","zoom","style","height","width","TileLayer","attribution","url","MapMarkerCluster","Map_MarkerList","Component","App","fetch","response","ok","Error","statusText","json","field","location_2","coordinates","newData","setState","console","log","_context","t0","id","fa","src","fork","alt","spoon","Map_MyMap","href","Boolean","window","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f343ab8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spoon.c51a13fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/fork.7a73ec7c.svg\";","import React, { Fragment } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n\r\nconst PopupMarker = content => (\r\n  <Marker position={content.coords}>\r\n    <Popup>\r\n      <div>\r\n        <h4>{content.applicant}</h4>\r\n        <p>{content.location}</p>\r\n        <p>\r\n          {content.starttime} - {content.endtime}\r\n        </p>\r\n        <p>{content.optionaltext}</p>\r\n      </div>\r\n    </Popup>\r\n  </Marker>\r\n);\r\n\r\nconst MarkerList = ({ markers }) => {\r\n  const items = markers.map(({ ...props }, index) => (\r\n    <PopupMarker key={index} {...props} />\r\n  ));\r\n  return <Fragment>{items}</Fragment>;\r\n};\r\n\r\nexport default MarkerList;\r\n","import { MapLayer, withLeaflet } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nrequire(\"leaflet.markercluster\");\r\n\r\nclass MarkerClusterGroup extends MapLayer {\r\n  createLeafletElement(props) {\r\n    const el = new L.markerClusterGroup(props);\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: el\r\n    };\r\n    return el;\r\n  }\r\n}\r\n\r\nexport default withLeaflet(MarkerClusterGroup);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Map, TileLayer } from \"react-leaflet\";\n\nimport MarkerList from \"./MarkerList\";\nimport MarkerClusterGroup from \"./MapMarkerCluster\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\nclass MyMap extends Component {\n  static propTypes = {\n    data: PropTypes.array\n  };\n\n  state = {\n    lat: 37.7749,\n    lng: -122.4194\n  };\n\n  render() {\n    const { data } = this.props;\n    const position = [this.state.lat, this.state.lng];\n\n    const southWest = L.latLng(37.713159, -122.527084);\n    const northEast = L.latLng(37.814666, -122.365723);\n    const bounds = L.latLngBounds(southWest, northEast);\n\n    return (\n      <Map\n        center={position}\n        ref=\"map\"\n        maxBounds={bounds}\n        maxZoom=\"20\"\n        zoom=\"13\"\n        style={{ height: \"30em\", width: \"75%\" }}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <MarkerClusterGroup>\n          <MarkerList markers={data} />\n        </MarkerClusterGroup>\n      </Map>\n    );\n  }\n}\n\nexport default MyMap;\n","import React, { Component } from \"react\";\r\nimport MyMap from \"../Map/MyMap\";\r\n\r\nimport \"./App.scss\";\r\nimport spoon from \"../assets/spoon.svg\";\r\nimport fork from \"../assets/fork.svg\";\r\nimport {\r\n  FaGithubSquare,\r\n  FaLinkedinIn,\r\n  FaTwitter,\r\n  FaReact,\r\n  FaShippingFast\r\n} from \"react-icons/fa\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://data.sfgov.org/resource/bbb8-hzi6.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      const json = await response.json();\r\n      const newData = await json.map(field => ({\r\n        applicant: field.applicant,\r\n        coords: [\r\n          field.location_2.coordinates[1],\r\n          field.location_2.coordinates[0]\r\n        ],\r\n        endtime: field.endtime,\r\n        location: field.location,\r\n        optionaltext: field.optionaltext,\r\n        starttime: field.starttime\r\n      }));\r\n      this.setState({ data: newData });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div id=\"App-container\">\r\n        <header id=\"App-header\">\r\n          <div id=\"App-hero\">\r\n            <h2>\r\n              Mobile <FaShippingFast /> Eats\r\n            </h2>\r\n          </div>\r\n          <div id=\"App-animations\">\r\n            <img id=\"animated-fork\" src={fork} alt=\"animated fork\" />\r\n            <div id=\"App-summary\">\r\n              <h3>Truck tracker for the San Franciscan foodie.</h3>\r\n              <hr />\r\n              <h4>\r\n                Simply drag or zoom the map to find your next, perfect meal.\r\n              </h4>\r\n            </div>\r\n            <img id=\"animated-spoon\" src={spoon} alt=\"animated spoon\" />\r\n          </div>\r\n        </header>\r\n        <section id=\"App-map-frame\">\r\n          {data !== null && <MyMap data={data} />}\r\n        </section>\r\n        <footer id=\"App-footer\">\r\n          <div id=\"App-credits\">\r\n            <p>\r\n              Photo by{\" \"}\r\n              <a href=\"https://unsplash.com/search/photos/tobias-zils\">\r\n                Tobias Zils\r\n              </a>{\" \"}\r\n              on <a href=\"https://unsplash.com/\">Unsplash</a>\r\n            </p>\r\n            <p>\r\n              Candy coded with <FaReact /> and a few other things.\r\n            </p>\r\n          </div>\r\n          <div id=\"App-links\">\r\n            <a href=\"https://github.com/Tashazun\">\r\n              <FaGithubSquare />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/tashazuniga/\">\r\n              <FaLinkedinIn />\r\n            </a>\r\n            <a href=\"https://twitter.com/artofobscura\">\r\n              <FaTwitter />\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}